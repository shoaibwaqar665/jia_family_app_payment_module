syntax = "proto3";

package payment.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/jia-app/paymentservice/api/payment/v1;paymentv1";

// PaymentService provides payment processing functionality
service PaymentService {
  // CreatePayment creates a new payment
  rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse);
  
  // GetPayment retrieves a payment by ID
  rpc GetPayment(GetPaymentRequest) returns (GetPaymentResponse);
  
  // UpdatePaymentStatus updates the status of a payment
  rpc UpdatePaymentStatus(UpdatePaymentStatusRequest) returns (UpdatePaymentStatusResponse);
  
  // GetPaymentsByCustomer retrieves payments for a customer
  rpc GetPaymentsByCustomer(GetPaymentsByCustomerRequest) returns (GetPaymentsByCustomerResponse);
  
  // ListPayments retrieves a list of payments with pagination
  rpc ListPayments(ListPaymentsRequest) returns (ListPaymentsResponse);
  
  // CreateCheckoutSession creates a checkout session for payment
  rpc CreateCheckoutSession(CreateCheckoutSessionRequest) returns (CreateCheckoutSessionResponse);
  
  // ProcessWebhook processes webhook events from payment providers
  rpc ProcessWebhook(ProcessWebhookRequest) returns (ProcessWebhookResponse);
  
  // ListEntitlements retrieves entitlements for a user
  rpc ListEntitlements(ListEntitlementsRequest) returns (ListEntitlementsResponse);
  
  // CheckEntitlement checks if a user has access to a feature
  rpc CheckEntitlement(CheckEntitlementRequest) returns (CheckEntitlementResponse);
  
  // BulkCheckEntitlements checks multiple entitlements in a single request
  rpc BulkCheckEntitlements(BulkCheckEntitlementsRequest) returns (BulkCheckEntitlementsResponse);
  
  // ListPricingZones retrieves all pricing zones
  rpc ListPricingZones(ListPricingZonesRequest) returns (ListPricingZonesResponse);
}

// CreatePaymentRequest represents a request to create a payment
message CreatePaymentRequest {
  double amount = 1;           // Amount in dollars
  string currency = 2;        // Currency code (e.g., USD, EUR)
  string payment_method = 3;  // Payment method
  string customer_id = 4;     // Customer identifier
  string order_id = 5;        // Order identifier
  string description = 6;     // Payment description
}

// CreatePaymentResponse represents a response to payment creation
message CreatePaymentResponse {
  Payment payment = 1;
}

// GetPaymentRequest represents a request to retrieve a payment
message GetPaymentRequest {
  string id = 1;  // Payment ID
}

// GetPaymentResponse represents a response with payment details
message GetPaymentResponse {
  Payment payment = 1;
}

// UpdatePaymentStatusRequest represents a request to update payment status
message UpdatePaymentStatusRequest {
  string id = 1;      // Payment ID
  string status = 2;  // New status
}

// UpdatePaymentStatusResponse represents a response to status update
message UpdatePaymentStatusResponse {
  bool success = 1;
}

// GetPaymentsByCustomerRequest represents a request to get customer payments
message GetPaymentsByCustomerRequest {
  string customer_id = 1;  // Customer identifier
  int32 limit = 2;         // Maximum number of payments to return
  int32 offset = 3;        // Number of payments to skip
}

// GetPaymentsByCustomerResponse represents a response with customer payments
message GetPaymentsByCustomerResponse {
  repeated Payment payments = 1;
  int32 total = 2;
}

// ListPaymentsRequest represents a request to list payments
message ListPaymentsRequest {
  int32 limit = 1;   // Maximum number of payments to return
  int32 offset = 2;  // Number of payments to skip
}

// ListPaymentsResponse represents a response with payments list
message ListPaymentsResponse {
  repeated Payment payments = 1;
  int32 total = 2;
}

// Payment represents a payment transaction
message Payment {
  string id = 1;                    // Payment identifier
  double amount = 2;                 // Amount in dollars
  string currency = 3;              // Currency code
  string status = 4;                // Payment status
  string payment_method = 5;        // Payment method
  string customer_id = 6;           // Customer identifier
  string order_id = 7;              // Order identifier
  string description = 8;           // Payment description
  google.protobuf.Timestamp created_at = 9;   // Creation timestamp
  google.protobuf.Timestamp updated_at = 10;  // Last update timestamp
}

// PaymentStatus represents the status of a payment
enum PaymentStatus {
  PAYMENT_STATUS_UNSPECIFIED = 0;
  PAYMENT_STATUS_PENDING = 1;
  PAYMENT_STATUS_COMPLETED = 2;
  PAYMENT_STATUS_FAILED = 3;
  PAYMENT_STATUS_CANCELLED = 4;
  PAYMENT_STATUS_REFUNDED = 5;
}

// PaymentMethod represents the method used for payment
enum PaymentMethod {
  PAYMENT_METHOD_UNSPECIFIED = 0;
  PAYMENT_METHOD_CREDIT_CARD = 1;
  PAYMENT_METHOD_DEBIT_CARD = 2;
  PAYMENT_METHOD_BANK_TRANSFER = 3;
  PAYMENT_METHOD_DIGITAL_WALLET = 4;
}

// CreateCheckoutSessionRequest represents a request to create a checkout session
message CreateCheckoutSessionRequest {
  string plan_id = 1;           // Plan identifier
  string user_id = 2;           // User identifier
  string family_id = 3;         // Family identifier (optional)
  string country_code = 4;      // Country code for pricing
  double base_price = 5;         // Base price in dollars
  string currency = 6;          // Currency code
  string success_url = 7;       // Success redirect URL
  string cancel_url = 8;        // Cancel redirect URL
}

// CreateCheckoutSessionResponse represents a response with checkout session details
message CreateCheckoutSessionResponse {
  string session_id = 1;        // Checkout session ID
  string url = 2;               // Checkout URL
  google.protobuf.Timestamp expires_at = 3;  // Session expiration
}

// ProcessWebhookRequest represents a webhook processing request
message ProcessWebhookRequest {
  bytes payload = 1;            // Webhook payload
  string signature = 2;         // Webhook signature
  string provider = 3;          // Payment provider (e.g., "stripe")
}

// ProcessWebhookResponse represents a response to webhook processing
message ProcessWebhookResponse {
  bool success = 1;             // Processing success status
  string message = 2;           // Response message
}

// ListEntitlementsRequest represents a request to list user entitlements
message ListEntitlementsRequest {
  string user_id = 1;           // User identifier
  int32 limit = 2;              // Maximum number of entitlements to return
  int32 offset = 3;             // Number of entitlements to skip
}

// ListEntitlementsResponse represents a response with entitlements list
message ListEntitlementsResponse {
  repeated Entitlement entitlements = 1;
  int32 total = 2;
}

// CheckEntitlementRequest represents a request to check user entitlement
message CheckEntitlementRequest {
  string user_id = 1;           // User identifier
  string feature_code = 2;      // Feature code to check
}

// CheckEntitlementResponse represents a response to entitlement check
message CheckEntitlementResponse {
  bool allowed = 1;             // Whether user has access
  Entitlement entitlement = 2;  // Entitlement details (if exists)
}

// Entitlement represents a user entitlement
message Entitlement {
  string id = 1;                        // Entitlement identifier
  string user_id = 2;                   // User identifier
  string family_id = 3;                 // Family identifier (optional)
  string feature_code = 4;              // Feature code
  string plan_id = 5;                   // Plan identifier
  string subscription_id = 6;           // Subscription identifier (optional)
  string status = 7;                    // Entitlement status
  google.protobuf.Timestamp granted_at = 8;    // Grant timestamp
  google.protobuf.Timestamp expires_at = 9;    // Expiration timestamp (optional)
  google.protobuf.Timestamp created_at = 10;   // Creation timestamp
  google.protobuf.Timestamp updated_at = 11;   // Last update timestamp
}

// ListPricingZonesRequest represents a request to list pricing zones
message ListPricingZonesRequest {
  // No parameters needed for now
}

// ListPricingZonesResponse represents a response with pricing zones list
message ListPricingZonesResponse {
  repeated PricingZone pricing_zones = 1;
}

// PricingZone represents a pricing zone
message PricingZone {
  string id = 1;                        // Pricing zone identifier
  string iso_code = 2;                  // ISO country code
  string country = 3;                   // Country name
  string zone = 4;                      // Zone type (A, B, C, D)
  string zone_name = 5;                 // Zone name (Premium, Mid-High, etc.)
  double pricing_multiplier = 6;        // Pricing multiplier
  google.protobuf.Timestamp created_at = 7;   // Creation timestamp
  google.protobuf.Timestamp updated_at = 8;   // Last update timestamp
}

// BulkCheckEntitlementsRequest represents a request for bulk entitlement checking
message BulkCheckEntitlementsRequest {
  string user_id = 1;                   // User identifier
  repeated BulkCheckItem checks = 2;    // List of entitlement checks
}

// BulkCheckItem represents a single entitlement check
message BulkCheckItem {
  string feature_code = 1;              // Feature code to check
  string operation = 2;                 // Specific operation (optional)
  int64 resource_size = 3;              // Resource size for quota checks (optional)
  map<string, string> metadata = 4;     // Additional metadata (optional)
}

// BulkCheckEntitlementsResponse represents the response from bulk entitlement checking
message BulkCheckEntitlementsResponse {
  repeated BulkCheckResult results = 1; // Results for each check
  BulkCheckSummary summary = 2;          // Summary statistics
}

// BulkCheckResult represents the result of a single entitlement check
message BulkCheckResult {
  string feature_code = 1;              // Feature code that was checked
  bool authorized = 2;                  // Whether the user is authorized
  Entitlement entitlement = 3;          // Entitlement details (if authorized)
  string reason = 4;                    // Reason for denial (if not authorized)
  string upgrade_url = 5;               // Upgrade URL (if not authorized)
  map<string, string> metadata = 6;     // Additional metadata
}

// BulkCheckSummary provides summary statistics for bulk checks
message BulkCheckSummary {
  int32 total_checks = 1;               // Total number of checks performed
  int32 authorized = 2;                 // Number of authorized checks
  int32 not_authorized = 3;             // Number of not authorized checks
  int32 cache_hits = 4;                 // Number of cache hits
  int32 cache_misses = 5;               // Number of cache misses
  int64 processing_time_ms = 6;         // Processing time in milliseconds
}
