version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    container_name: paymentservice_postgres
    environment:
      POSTGRES_DB: paymentservice
      POSTGRES_USER: paymentservice
      POSTGRES_PASSWORD: paymentservice123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./../migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U paymentservice -d paymentservice"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paymentservice_network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: paymentservice_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paymentservice_network

  # Database migration service (one-off)
  migrate:
    image: migrate/migrate:v4
    container_name: paymentservice_migrate
    command: ["-path", "/migrations", "-database", "postgres://paymentservice:paymentservice123@postgres:5432/paymentservice?sslmode=disable", "up"]
    volumes:
      - ./../migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - paymentservice_network
    profiles:
      - migrate

  # Payment Service (optional, for local development)
  paymentservice:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: paymentservice_app
    ports:
      - "50051:50051"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=paymentservice
      - DB_PASSWORD=paymentservice123
      - DB_NAME=paymentservice
      - DB_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - SERVER_PORT=50051
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - paymentservice_network
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  paymentservice_network:
    driver: bridge
